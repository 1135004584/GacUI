<Resource>
  <Instance name="MainWindowResource">
    <Instance ref.CodeBehind="false" ref.Class="demo::MainWindow">
      <Window ref.Name="self" Text="MainWindow" ClientSize="x:640 y:480">
        <Bounds AlignmentToParent="left:0 top:0 right:0 bottom:0" MinSizeLimitation="LimitToElementAndChildren">
          <SolidBorder Color="#FF0000"/>
          <Stack AlignmentToParent="left:10 top:10" Padding="5" MinSizeLimitation="LimitToElementAndChildren" Direction="Vertical">
            <StackItem>
              <CheckBox ref.Name="checkMaximizedBox" Text="MaximizedBox" Selected-eval="self.MaximizedBox" AutoSelection="false">
                <ev.Clicked-eval>
                  <![CDATA[
                    {
                      self.MaximizedBox = not self.MaximizedBox;
                      checkMaximizedBox.Selected = self.MaximizedBox;
                    }
                  ]]>
                </ev.Clicked-eval>
              </CheckBox>
            </StackItem>
            <StackItem>
              <CheckBox ref.Name="checkMinimizedBox" Text="MinimizedBox" Selected-eval="self.MinimizedBox" AutoSelection="false">
                <ev.Clicked-eval>
                  <![CDATA[
                    {
                      self.MinimizedBox = not self.MinimizedBox;
                      checkMinimizedBox.Selected = self.MinimizedBox;
                    }
                  ]]>
                </ev.Clicked-eval>
              </CheckBox>
            </StackItem>
            <StackItem>
              <CheckBox ref.Name="checkBorder" Text="Border" Selected-eval="self.Border" AutoSelection="false">
                <ev.Clicked-eval>
                  <![CDATA[
                    {
                      self.Border = not self.Border;
                      checkBorder.Selected = self.Border;
                    }
                  ]]>
                </ev.Clicked-eval>
              </CheckBox>
            </StackItem>
            <StackItem>
              <CheckBox ref.Name="checkSizeBox" Text="SizeBox" Selected-eval="self.SizeBox" AutoSelection="false">
                <ev.Clicked-eval>
                  <![CDATA[
                    {
                      self.SizeBox = not self.SizeBox;
                      checkSizeBox.Selected = self.SizeBox;
                    }
                  ]]>
                </ev.Clicked-eval>
              </CheckBox>
            </StackItem>
            <StackItem>
              <CheckBox ref.Name="checkIconVisible" Text="IconVisible" Selected-eval="self.IconVisible" AutoSelection="false">
                <ev.Clicked-eval>
                  <![CDATA[
                    {
                      self.IconVisible = not self.IconVisible;
                      checkIconVisible.Selected = self.IconVisible;
                    }
                  ]]>
                </ev.Clicked-eval>
              </CheckBox>
            </StackItem>
            <StackItem>
              <CheckBox ref.Name="checkTitleBar" Text="TitleBar" Selected-eval="self.TitleBar" AutoSelection="false">
                <ev.Clicked-eval>
                  <![CDATA[
                    {
                      self.TitleBar = not self.TitleBar;
                      checkTitleBar.Selected = self.TitleBar;
                    }
                  ]]>
                </ev.Clicked-eval>
              </CheckBox>
            </StackItem>
          </Stack>
        </Bounds>
      </Window>
    </Instance>
  </Instance>

  <Folder name="DarkSkin">
    <InstanceStyle name="Style" content="File">..\..\Host\Resources\DarkSkin\Style.xml</InstanceStyle>
  </Folder>

  <Instance name="ThemeResource">
    <Instance ref.CodeBehind="false" ref.Class="demo::TestTheme" xmlns:demo="demo::*">
      <ThemeTemplates Name="TestSkin">
        <att.Window>demo:WindowTemplate</att.Window>
      </ThemeTemplates>
    </Instance>
  </Instance>

  <Instance name="WindowTemplateResource">
    <Instance ref.CodeBehind="false" ref.Class="demo::WindowTemplate" ref.Styles="res://DarkSkin/Style">
      <WindowTemplate ref.Name="self" ContainerComposition-ref="container" MinSizeLimitation="LimitToElementAndChildren">
        <att.CustomizedBorder>true</att.CustomizedBorder>
        <att.TooltipTemplate>darkskin::TooltipTemplate</att.TooltipTemplate>

        <SolidBackground Color="#2D2D30"/>
        <Bounds AlignmentToParent="left:0 top:0 right:0 bottom:0">
          <SolidBorder Color="#017ACC"/>
          <Table AlignmentToParent="left:0 top:0 right:0 bottom:0">
            <att.Rows>
              <CellOption>composeType:Absolute absolute:8</CellOption>
              <CellOption>composeType:MinSize</CellOption>
              <CellOption>composeType:Percentage percentage:1.0</CellOption>
              <CellOption>composeType:Absolute absolute:8</CellOption>
            </att.Rows>
            <att.Columns>
              <CellOption>composeType:Absolute absolute:8</CellOption>
              <CellOption>composeType:Percentage percentage:1.0</CellOption>
              <CellOption>composeType:MinSize</CellOption>
              <CellOption>composeType:MinSize</CellOption>
              <CellOption>composeType:MinSize</CellOption>
              <CellOption>composeType:Absolute absolute:8</CellOption>
            </att.Columns>

            <Cell Site="row:0 column:0" AssociatedHitTestResult="BorderLeftTop"/>
            <Cell Site="row:0 column:5" AssociatedHitTestResult="BorderRightTop"/>
            <Cell Site="row:3 column:0" AssociatedHitTestResult="BorderLeftBottom"/>
            <Cell Site="row:3 column:5" AssociatedHitTestResult="BorderRightBottom"/>

            <Cell Site="row:1 column:0 rowSpan:2 columnSpan:1" AssociatedHitTestResult="BorderLeft"/>
            <Cell Site="row:1 column:5 rowSpan:2 columnSpan:1" AssociatedHitTestResult="BorderRight"/>
            <Cell Site="row:0 column:1 rowSpan:1 columnSpan:4" AssociatedHitTestResult="BorderTop"/>
            <Cell Site="row:3 column:1 rowSpan:1 columnSpan:4" AssociatedHitTestResult="BorderBottom"/>

            <Cell Site="row:1 column:2" AssociatedHitTestResult="ButtonMinimum">
              <Button Text=" 0 " Font="fontFamily:'Webdings' size:16" ControlTemplate="darkskin::ButtonTemplate">
                <att.BoundsComposition-set AlignmentToParent="left:1 top:1 right:1 bottom:1"/>
              </Button>
            </Cell>
            <Cell Site="row:1 column:3" AssociatedHitTestResult="ButtonMaximum">
              <Button Text-bind="self.Maximized ? ' 1 ' : ' 2 '" Font="fontFamily:'Webdings' size:16" ControlTemplate="darkskin::ButtonTemplate">
                <att.BoundsComposition-set AlignmentToParent="left:1 top:1 right:1 bottom:1"/>
              </Button>
            </Cell>
            <Cell Site="row:1 column:4" AssociatedHitTestResult="ButtonClose">
              <Button Text=" r " Font="fontFamily:'Webdings' size:16" ControlTemplate="darkskin::ButtonTemplate">
                <att.BoundsComposition-set AlignmentToParent="left:1 top:1 right:1 bottom:1"/>
              </Button>
            </Cell>

            <Cell Site="row:1 column:1" AssociatedHitTestResult="Title">
              <Bounds AlignmentToParent="left:5 top:5 right:5 bottom:5">
                <SolidLabel Color="#999999" Text-bind="self.Text" Ellipse="true" Font="fontFamily:'Segoe WP SemiLight' size:14 antialias:true"/>
              </Bounds>
            </Cell>
            <Cell Site="row:2 column:1 rowSpan:1 columnSpan:4" AssociatedHitTestResult="Client">
              <Bounds ref.Name="container" AlignmentToParent="left:0 top:0 right:0 bottom:0"/>
            </Cell>
          </Table>
        </Bounds>
      </WindowTemplate>
    </Instance>
  </Instance>
</Resource>
