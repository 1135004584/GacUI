<Resource>
  <Folder name="DarkSkin">
    <InstanceStyle name="Style" content="File">..\..\Host\Resources\DarkSkin\Style.xml</InstanceStyle>
  </Folder>

  <Folder name="Images">
    <Image name="CustomIcon" content="File">Annotate_Default.ico</Image>
  </Folder>

  <Instance name="ThemeResource">
    <Instance ref.CodeBehind="false" ref.Class="demo::TestTheme" xmlns:x="testtheme::*">
      <ThemeTemplates Name="TestSkin">
      </ThemeTemplates>
    </Instance>
  </Instance>

  <Instance name="MainWindowResource">
    <Instance ref.CodeBehind="false" ref.Class="demo::TestWindow">
      <ref.Members>
        <![CDATA[
          prop CustomIcon : GuiImageData^ = null {}
        ]]>
      </ref.Members>
      <Window ref.Name="self" Text="MainWindow" ClientSize="x:640 y:480" TopMost="true" IconVisible-bind="checkVisible.Selected" Icon-bind="checkCustom.Selected ? self.CustomIcon : null" CustomIcon-uri="res://Images/CustomIcon">
        <Stack AlignmentToParent="left:10 top:10 right:-1 bottom:-1" MinSizeLimitation="LimitToElementAndChildren" Direction="Vertical">
          <StackItem>
            <CheckBox ref.Name="checkVisible" Text="Icon Visible" Selected="true"/>
          </StackItem>
          <StackItem>
            <CheckBox ref.Name="checkCustom" Text="Custom Icon" Selected="false"/>
          </StackItem>
          <StackItem>
            <Button Text="Create another copy">
              <ev.Clicked-eval>
                <![CDATA[
                  {
                    new TestWindow*().ShowModalAndDelete(self, func():void{});
                  }
                ]]>
              </ev.Clicked-eval>
            </Button>
          </StackItem>
        </Stack>
      </Window>
    </Instance>
  </Instance>
</Resource>