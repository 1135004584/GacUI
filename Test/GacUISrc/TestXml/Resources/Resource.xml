<Resource>
  <Folder name="DarkSkin">
    <InstanceStyle name="Style" content="File">..\..\Host\Resources\DarkSkin\Style.xml</InstanceStyle>
  </Folder>

  <Instance name="ThemeResource">
    <Instance ref.CodeBehind="false" ref.Class="demo::TestTheme" xmlns:x="testtheme::*">
      <ThemeTemplates Name="TestSkin">
      </ThemeTemplates>
    </Instance>
  </Instance>
  
  <Script name="ViewModelResource">
    <Workflow>
      <![CDATA[
        module viewmodel;
        
        using system::*;
        
        class NodeViewModel
        {
          prop Text : string = "" {}
          prop Children : observe NodeViewModel^[] = null {not observe}
        
          static func CreateNode(prefix : string, level: int, index: int) : NodeViewModel^
          {
            var nodePrefix =
              level == 0 ? "" :
              level == 1 ? $"$(index)" :
              $"$(prefix)-$(index)"
              ;
            var node = new NodeViewModel^();
            node.Text = $"$(nodePrefix): $(Sys::LoremIpsumSentence(50))";
            if (level < 3)
            {
              node.Children = {};
              for (i in range[0, 20))
              {
                node.Children.Add(CreateNode(nodePrefix, level + 1, i));
              }
            }
            return node;
          }
        }
      ]]>
    </Workflow>
  </Script>

  <Instance name="MainWindowResource">
    <Instance ref.CodeBehind="false" ref.Class="demo::TestWindow">
      <Window ref.Name="self" Text="MainWindow" ClientSize="x:640 y:480" TopMost="true">
        <Table AlignmentToParent="left:0 top:8 right:0 bottom:0" BorderVisible="false" CellPadding="5" MinSizeLimitation="LimitToElementAndChildren">
          <att.Rows>
            <_>composeType:MinSize</_>
            <_>composeType:Percentage percentage:1.0</_>
          </att.Rows>
          <att.Columns>
            <_>composeType:MinSize</_>
            <_>composeType:MinSize</_>
            <_>composeType:Percentage percentage:1.0</_>
          </att.Columns>

          <Cell Site="row:0 column:0">
            <Button Enabled-bind="self.Font is null" Text="Set Font to &quot;Lucida Calligraphy&quot;">
              <ev.Clicked-eval>
                <![CDATA[
                  {
                    self.Font = {fontFamily:"Lucida Calligraphy" size:20};
                  }
                ]]>
              </ev.Clicked-eval>
            </Button>
          </Cell>

          <Cell Site="row:0 column:1">
            <Button Enabled-bind="self.Font is not null" Text-format="Set Font to default ($(INativeController::GetCurrentController().ResourceService().DefaultFont.fontFamily))">
              <ev.Clicked-eval>
                <![CDATA[
                  {
                    self.Font = null;
                  }
                ]]>
              </ev.Clicked-eval>
            </Button>
          </Cell>

          <Cell Site="row:1 column:0 columnSpan:3">
            <BindableTreeView ref.Name="textList" HorizontalAlwaysVisible="false" VerticalAlwaysVisible="false" env.ItemType="NodeViewModel^">
              <att.BoundsComposition-set AlignmentToParent="left:0 top:0 right:0 bottom:0"/>
              <att.ItemSource-eval>NodeViewModel::CreateNode("", 0, 0)</att.ItemSource-eval>
              <att.TextProperty>Text</att.TextProperty>
              <att.ChildrenProperty>Children</att.ChildrenProperty>
              <att.Arranger>
                <FreeHeightItemArranger/>
              </att.Arranger>
            </BindableTreeView>
          </Cell>
        </Table>
      </Window>
    </Instance>
  </Instance>
</Resource>
