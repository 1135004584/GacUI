<Resource>
  <Folder name="DarkSkin">
    <InstanceStyle name="Style" content="File">..\..\Host\Resources\DarkSkin\Style.xml</InstanceStyle>
  </Folder>
  
  <Instance name="ButtonTemplateResource">
    <Instance ref.CodeBehind="false" ref.Class="testtheme::ButtonTemplate" ref.Styles="res://DarkSkin/Style">
      <ButtonTemplate ref.Name="self" MinSizeLimitation="LimitToElementAndChildren">
        <SolidBackground ref.Style="buttonBackground"/>
        <Bounds AlignmentToParent="left:0 top:0 right:0 bottom:0">
          <SolidBorder ref.Style="buttonBorder"/>
        </Bounds>
        <Bounds AlignmentToParent="left:1 top:1 right:1 bottom:1" Visible-bind="self.Focused">
          <FocusRectangle/>
        </Bounds>
        <Bounds AlignmentToParent="left:3 top:1 right:3 bottom:1">
          <SolidLabel ref.Style="buttonText" Text-bind="self.Text" Font-bind="self.Font" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Bounds>
      </ButtonTemplate>
    </Instance>
  </Instance>

  <Instance name="CheckBoxTemplateResource">
    <Instance ref.CodeBehind="false" ref.Class="testtheme::CheckBoxTemplate" ref.Styles="res://DarkSkin/Style">
      <SelectableButtonTemplate ref.Name="self" MinSizeLimitation="LimitToElementAndChildren">
        <Table AlignmentToParent="left:0 top:0 right:0 bottom:0">
          <att.Rows>
            <CellOption>composeType:Percentage percentage:1.0</CellOption>
            <CellOption>composeType:Absolute absolute:17</CellOption>
            <CellOption>composeType:Percentage percentage:1.0</CellOption>
          </att.Rows>
          <att.Columns>
            <CellOption>composeType:Absolute absolute:17</CellOption>
            <CellOption>composeType:Percentage percentage:1.0</CellOption>
          </att.Columns>

          <Cell Site="row:1 column:0">
            <Bounds AlignmentToParent="left:2 top:2 right:2 bottom:2">
              <SolidBackground ref.Style="buttonBackground"/>
            </Bounds>
            <Bounds AlignmentToParent="left:2 top:2 right:2 bottom:2">
              <SolidBorder ref.Style="buttonBorder"/>
            </Bounds>
            <Bounds Visible-bind="self.Selected" AlignmentToParent="left:0 top:0 right:0 bottom:0">
              <SolidLabel ref.Style="buttonText" Text="a" Font="fontFamily:'Webdings' size:16" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Bounds>
          </Cell>

          <Cell Site="row:0 column:1 rowSpan:3 columnSpan:1">
            <Bounds AlignmentToParent="left:3 top:1 right:3 bottom:1">
              <SolidLabel ref.Style="labelText" Text-bind="self.Text" Font-bind="self.Font" HorizontalAlignment="Left" VerticalAlignment="Center"/>
            </Bounds>
          </Cell>
        </Table>
      </SelectableButtonTemplate>
    </Instance>
  </Instance>

  <Instance name="RadioButtonTemplateResource">
    <Instance ref.CodeBehind="false" ref.Class="testtheme::RadioButtonTemplate" ref.Styles="res://DarkSkin/Style">
      <SelectableButtonTemplate ref.Name="self" MinSizeLimitation="LimitToElementAndChildren">
        <Table AlignmentToParent="left:0 top:0 right:0 bottom:0">
          <att.Rows>
            <CellOption>composeType:Percentage percentage:1.0</CellOption>
            <CellOption>composeType:Absolute absolute:17</CellOption>
            <CellOption>composeType:Percentage percentage:1.0</CellOption>
          </att.Rows>
          <att.Columns>
            <CellOption>composeType:Absolute absolute:17</CellOption>
            <CellOption>composeType:Percentage percentage:1.0</CellOption>
          </att.Columns>

          <Cell Site="row:1 column:0">
            <Bounds AlignmentToParent="left:2 top:2 right:2 bottom:2">
              <SolidBackground ref.Style="buttonBackground" Shape="shapeType:Ellipse"/>
            </Bounds>
            <Bounds AlignmentToParent="left:2 top:2 right:2 bottom:2">
              <SolidBorder ref.Style="buttonBorder" Shape="shapeType:Ellipse"/>
            </Bounds>
            <Bounds Visible-bind="self.Selected" AlignmentToParent="left:5 top:5 right:5 bottom:5">
              <SolidBackground ref.Style="buttonText" Shape="shapeType:Ellipse"/>
            </Bounds>
          </Cell>

          <Cell Site="row:0 column:1 rowSpan:3 columnSpan:1">
            <Bounds AlignmentToParent="left:3 top:1 right:3 bottom:1">
              <SolidLabel ref.Style="labelText" Text-bind="self.Text" Font-bind="self.Font" HorizontalAlignment="Left" VerticalAlignment="Center"/>
            </Bounds>
          </Cell>
        </Table>
      </SelectableButtonTemplate>
    </Instance>
  </Instance>

  <Instance name="ThemeResource">
    <Instance ref.CodeBehind="false" ref.Class="demo::TestTheme" xmlns:x="testtheme::*">
      <ThemeTemplates Name="TestSkin">
        <att.Button>x:ButtonTemplate</att.Button>
        <att.CheckBox>x:CheckBoxTemplate</att.CheckBox>
        <att.RadioButton>x:RadioButtonTemplate</att.RadioButton>
      </ThemeTemplates>
    </Instance>
  </Instance>

  <Instance name="MainWindowResource">
    <Instance ref.CodeBehind="false" ref.Class="demo::MainWindow2">
      <Window ref.Name="self" Text="MainWindow" ClientSize="x:640 y:480">
        <Bounds AlignmentToParent="left:0 top:0 right:0 bottom:0" MinSizeLimitation="LimitToElementAndChildren">
          <Stack AlignmentToParent="left:10 top:10" Padding="5" MinSizeLimitation="LimitToElementAndChildren" Direction="Vertical">
            <StackItem>
              <CheckBox ref.Name="checkMaximizedBox" Text="MaximizedBox" Selected-eval="self.MaximizedBox" AutoSelection="false">
                <ev.Clicked-eval>
                  <![CDATA[
                    {
                      self.MaximizedBox = not self.MaximizedBox;
                      checkMaximizedBox.Selected = self.MaximizedBox;
                    }
                  ]]>
                </ev.Clicked-eval>
              </CheckBox>
            </StackItem>
            <StackItem>
              <CheckBox ref.Name="checkMinimizedBox" Text="MinimizedBox" Selected-eval="self.MinimizedBox" AutoSelection="false">
                <ev.Clicked-eval>
                  <![CDATA[
                    {
                      self.MinimizedBox = not self.MinimizedBox;
                      checkMinimizedBox.Selected = self.MinimizedBox;
                    }
                  ]]>
                </ev.Clicked-eval>
              </CheckBox>
            </StackItem>
            <StackItem>
              <CheckBox ref.Name="checkBorder" Text="Border" Selected-eval="self.Border" AutoSelection="false">
                <ev.Clicked-eval>
                  <![CDATA[
                    {
                      self.Border = not self.Border;
                      checkBorder.Selected = self.Border;
                    }
                  ]]>
                </ev.Clicked-eval>
              </CheckBox>
            </StackItem>
            <StackItem>
              <CheckBox ref.Name="checkSizeBox" Text="SizeBox" Selected-eval="self.SizeBox" AutoSelection="false">
                <ev.Clicked-eval>
                  <![CDATA[
                    {
                      self.SizeBox = not self.SizeBox;
                      checkSizeBox.Selected = self.SizeBox;
                    }
                  ]]>
                </ev.Clicked-eval>
              </CheckBox>
            </StackItem>
            <StackItem>
              <CheckBox ref.Name="checkIconVisible" Text="IconVisible" Selected-eval="self.IconVisible" AutoSelection="false">
                <ev.Clicked-eval>
                  <![CDATA[
                    {
                      self.IconVisible = not self.IconVisible;
                      checkIconVisible.Selected = self.IconVisible;
                    }
                  ]]>
                </ev.Clicked-eval>
              </CheckBox>
            </StackItem>
            <StackItem>
              <CheckBox ref.Name="checkTitleBar" Text="TitleBar" Selected-eval="self.TitleBar" AutoSelection="false">
                <ev.Clicked-eval>
                  <![CDATA[
                    {
                      self.TitleBar = not self.TitleBar;
                      checkTitleBar.Selected = self.TitleBar;
                    }
                  ]]>
                </ev.Clicked-eval>
              </CheckBox>
            </StackItem>
          </Stack>
        </Bounds>
      </Window>
    </Instance>
  </Instance>
</Resource>
