<Resource>
  <Folder name="DarkSkin">
    <InstanceStyle name="Style" content="File">..\..\Host\Resources\DarkSkin\Style.xml</InstanceStyle>
  </Folder>

  <Instance name="TextListTemplateResource">
    <Instance ref.CodeBehind="false" ref.Class="testtheme::TextListTemplate" ref.Styles="res://DarkSkin/Style">
      <TextListTemplate ref.Name="self" MinSizeLimitation="LimitToElementAndChildren">
        <att.ContainerComposition-eval>look.ContainerComposition</att.ContainerComposition-eval>
        <att.HorizontalScroll-eval>look.HScroll</att.HorizontalScroll-eval>
        <att.VerticalScroll-eval>look.VScroll</att.VerticalScroll-eval>

        <att.BackgroundTemplate>darkskin::ItemBackgroundTemplate</att.BackgroundTemplate>
        <att.CheckBulletTemplate>darkskin::CheckBoxTemplate</att.CheckBulletTemplate>
        <att.RadioBulletTemplate>darkskin::RadioButtonTemplate</att.RadioBulletTemplate>
        <att.TextColor>#F1F1F1</att.TextColor>

        <SolidBackground Color="#252526"/>
        <Bounds AlignmentToParent="left:0 top:0 right:0 bottom:0" InternalMargin="left:1 top:1 right:1 bottom:1">
          <SolidBorder Color="#3F3F46"/>
          <CommonScrollViewLook ref.Name="look" AlignmentToParent="left:0 top:0 right:0 bottom:0">
            <att.HScrollTemplate>darkskin::HScrollTemplate</att.HScrollTemplate>
            <att.VScrollTemplate>darkskin::VScrollTemplate</att.VScrollTemplate>
            <att.DefaultScrollSize>20</att.DefaultScrollSize>
          </CommonScrollViewLook>
        </Bounds>
      </TextListTemplate>
    </Instance>
  </Instance>

  <Instance name="ComboBoxTemplateResource">
    <Instance ref.CodeBehind="false" ref.Class="testtheme::ComboBoxTemplate" ref.Styles="res://DarkSkin/Style">
      <DateComboBoxTemplate ref.Name="self" ContainerComposition-ref="container" MinSizeLimitation="LimitToElementAndChildren">
        <att.SubMenuTemplate>darkskin::ToolstripMenuTemplate</att.SubMenuTemplate>
        <att.DatePickerTemplate>darkskin::DatePickerTemplate</att.DatePickerTemplate>
        <SolidBackground ref.Style="comboBackground"/>
        <Bounds AlignmentToParent="left:0 top:0 right:0 bottom:0">
          <SolidBorder ref.Style="comboBorder"/>
          <Bounds ref.Name="container" AlignmentToParent="left:1 top:1 right:11 bottom:1">
            <Bounds AlignmentToParent="left:2 top:2 right:2 bottom:2" Visible-bind="self.TextVisible">
              <SolidLabel ref.Style="comboText" Text-bind="self.Text" Font-bind="self.Font" Ellipse="true" HorizontalAlignment="Left" VerticalAlignment="Center"/>
            </Bounds>
          </Bounds>

          <Table AlignmentToParent="left:-1 top:1 right:1 bottom:1" PreferredMinSize="x:9 y:0">
            <SolidBackground ref.Style="comboArrowBackground"/>
            <att.Rows>
              <CellOption>composeType:Percentage percentage:0.5</CellOption>
              <CellOption>composeType:Absolute absolute:3</CellOption>
              <CellOption>composeType:Percentage percentage:0.5</CellOption>
            </att.Rows>
            <att.Columns>
              <CellOption>composeType:Percentage percentage:0.5</CellOption>
              <CellOption>composeType:Absolute absolute:5</CellOption>
              <CellOption>composeType:Percentage percentage:0.5</CellOption>
            </att.Columns>

            <Cell Site="row:1 column:1">
              <Polygon ref.Style="comboArrow" Size="x:5 y:3">
                <att.Points>
                  <Point>x:0 y:0</Point>
                  <Point>x:2 y:2</Point>
                  <Point>x:4 y:0</Point>
                </att.Points>
              </Polygon>
            </Cell>
          </Table>
        </Bounds>
      </DateComboBoxTemplate>
    </Instance>
  </Instance>

  <Instance name="ListViewTemplateResource">
    <Instance ref.CodeBehind="false" ref.Class="testtheme::ListViewTemplate" ref.Styles="res://DarkSkin/Style">
      <ListViewTemplate ref.Name="self" MinSizeLimitation="LimitToElementAndChildren">
        <att.ContainerComposition-eval>look.ContainerComposition</att.ContainerComposition-eval>
        <att.HorizontalScroll-eval>look.HScroll</att.HorizontalScroll-eval>
        <att.VerticalScroll-eval>look.VScroll</att.VerticalScroll-eval>

        <att.BackgroundTemplate>darkskin::ItemBackgroundTemplate</att.BackgroundTemplate>
        <att.ColumnHeaderTemplate>darkskin::ListViewColumnHeaderTemplate</att.ColumnHeaderTemplate>
        <att.PrimaryTextColor>#F1F1F1</att.PrimaryTextColor>
        <att.SecondaryTextColor>#F1F1F1</att.SecondaryTextColor>
        <att.ItemSeparatorColor>#F1F1F1</att.ItemSeparatorColor>

        <SolidBackground Color="#252526"/>
        <Bounds AlignmentToParent="left:0 top:0 right:0 bottom:0" InternalMargin="left:1 top:1 right:1 bottom:1">
          <SolidBorder Color="#3F3F46"/>
          <CommonScrollViewLook ref.Name="look" AlignmentToParent="left:0 top:0 right:0 bottom:0">
            <att.HScrollTemplate>darkskin::HScrollTemplate</att.HScrollTemplate>
            <att.VScrollTemplate>darkskin::VScrollTemplate</att.VScrollTemplate>
            <att.DefaultScrollSize>20</att.DefaultScrollSize>
          </CommonScrollViewLook>
        </Bounds>
      </ListViewTemplate>
    </Instance>
  </Instance>

  <Instance name="TreeViewTemplateResource">
    <Instance ref.CodeBehind="false" ref.Class="testtheme::TreeViewTemplate" ref.Styles="res://DarkSkin/Style">
      <TreeViewTemplate ref.Name="self" MinSizeLimitation="LimitToElementAndChildren">
        <att.ContainerComposition-eval>look.ContainerComposition</att.ContainerComposition-eval>
        <att.HorizontalScroll-eval>look.HScroll</att.HorizontalScroll-eval>
        <att.VerticalScroll-eval>look.VScroll</att.VerticalScroll-eval>

        <att.BackgroundTemplate>darkskin::ItemBackgroundTemplate</att.BackgroundTemplate>
        <att.ExpandingDecoratorTemplate>darkskin::ExpandingDecoratorTemplate</att.ExpandingDecoratorTemplate>
        <att.TextColor>#F1F1F1</att.TextColor>

        <SolidBackground Color="#252526"/>
        <Bounds AlignmentToParent="left:0 top:0 right:0 bottom:0" InternalMargin="left:1 top:1 right:1 bottom:1">
          <SolidBorder Color="#3F3F46"/>
          <CommonScrollViewLook ref.Name="look" AlignmentToParent="left:0 top:0 right:0 bottom:0">
            <att.HScrollTemplate>darkskin::HScrollTemplate</att.HScrollTemplate>
            <att.VScrollTemplate>darkskin::VScrollTemplate</att.VScrollTemplate>
            <att.DefaultScrollSize>20</att.DefaultScrollSize>
          </CommonScrollViewLook>
        </Bounds>
      </TreeViewTemplate>
    </Instance>
  </Instance>

  <Instance name="ThemeResource">
    <Instance ref.CodeBehind="false" ref.Class="demo::TestTheme" xmlns:x="testtheme::*">
      <ThemeTemplates Name="TestSkin">
        <att.TextList>x:TextListTemplate</att.TextList>
        <att.ComboBox>x:ComboBoxTemplate</att.ComboBox>
        <att.ListView>x:ListViewTemplate</att.ListView>
        <att.TreeView>x:TreeViewTemplate</att.TreeView>
      </ThemeTemplates>
    </Instance>
  </Instance>

  <Instance name="MainWindowResource">
    <Instance ref.CodeBehind="false" ref.Class="demo::MainWindow2">
      <Window ref.Name="self" Text="MainWindow" ClientSize="x:640 y:480">
        <Bounds AlignmentToParent="left:0 top:0 right:0 bottom:0" MinSizeLimitation="LimitToElementAndChildren">
          <Stack AlignmentToParent="left:10 top:10" Padding="5" MinSizeLimitation="LimitToElementAndChildren" Direction="Vertical">
            <StackItem>
              <CheckBox ref.Name="checkMaximizedBox" Text="MaximizedBox" Selected-eval="self.MaximizedBox" AutoSelection="false">
                <ev.Clicked-eval>
                  <![CDATA[
                    {
                      self.MaximizedBox = not self.MaximizedBox;
                      checkMaximizedBox.Selected = self.MaximizedBox;
                    }
                  ]]>
                </ev.Clicked-eval>
              </CheckBox>
            </StackItem>
            <StackItem>
              <CheckBox ref.Name="checkMinimizedBox" Text="MinimizedBox" Selected-eval="self.MinimizedBox" AutoSelection="false">
                <ev.Clicked-eval>
                  <![CDATA[
                    {
                      self.MinimizedBox = not self.MinimizedBox;
                      checkMinimizedBox.Selected = self.MinimizedBox;
                    }
                  ]]>
                </ev.Clicked-eval>
              </CheckBox>
            </StackItem>
            <StackItem>
              <CheckBox ref.Name="checkBorder" Text="Border" Selected-eval="self.Border" AutoSelection="false">
                <ev.Clicked-eval>
                  <![CDATA[
                    {
                      self.Border = not self.Border;
                      checkBorder.Selected = self.Border;
                    }
                  ]]>
                </ev.Clicked-eval>
              </CheckBox>
            </StackItem>
            <StackItem>
              <CheckBox ref.Name="checkSizeBox" Text="SizeBox" Selected-eval="self.SizeBox" AutoSelection="false">
                <ev.Clicked-eval>
                  <![CDATA[
                    {
                      self.SizeBox = not self.SizeBox;
                      checkSizeBox.Selected = self.SizeBox;
                    }
                  ]]>
                </ev.Clicked-eval>
              </CheckBox>
            </StackItem>
            <StackItem>
              <CheckBox ref.Name="checkIconVisible" Text="IconVisible" Selected-eval="self.IconVisible" AutoSelection="false">
                <ev.Clicked-eval>
                  <![CDATA[
                    {
                      self.IconVisible = not self.IconVisible;
                      checkIconVisible.Selected = self.IconVisible;
                    }
                  ]]>
                </ev.Clicked-eval>
              </CheckBox>
            </StackItem>
            <StackItem>
              <CheckBox ref.Name="checkTitleBar" Text="TitleBar" Selected-eval="self.TitleBar" AutoSelection="false">
                <ev.Clicked-eval>
                  <![CDATA[
                    {
                      self.TitleBar = not self.TitleBar;
                      checkTitleBar.Selected = self.TitleBar;
                    }
                  ]]>
                </ev.Clicked-eval>
              </CheckBox>
            </StackItem>
          </Stack>
        </Bounds>
      </Window>
    </Instance>
  </Instance>
</Resource>
