<Resource>
  <Folder name="Images">
    <Image name="_1" content="File">Images/1.png</Image>
    <Image name="_2" content="File">Images/2.png</Image>
    <Image name="_3" content="File">Images/3.png</Image>
    <Image name="_4" content="File">Images/4.png</Image>
    <Image name="_5" content="File">Images/5.png</Image>
    <Image name="_6" content="File">Images/6.png</Image>
    <Image name="_7" content="File">Images/7.png</Image>
    <Image name="_8" content="File">Images/8.png</Image>
  </Folder>
  
  <Script name="ViewModelScript">
    <Workflow>
      <![CDATA[
        module viewmodel;
        
        using presentation::*;
        using presentation::controls::*;
        
        namespace demo
        {
          class AccountButtonViewModel
          {
            prop Controller: GuiSelectableButton::GroupController* = null {not observe}
            prop Name: string = "" {not observe}
            prop Image: INativeImage^ = null {not observe}
          }
        }
      ]]>
    </Workflow>
  </Script>

  <Instance name="AccountButtonTemplateResource">
    <Instance ref.CodeBehind="false" ref.Class="demo::AccountButtonTemplate">
      <ref.Members>
        <![CDATA[
          prop ViewModel: AccountButtonViewModel^ = null {}
        ]]>
      </ref.Members>
      <SelectableButtonTemplate ref.Name="self" MinSizeLimitation="LimitToElementAndChildren">
        <att.ViewModel-bind>cast (AccountButtonViewModel^) self.Context</att.ViewModel-bind>
        <SolidBackground Color="cast Color (self.Selected ? '#FFFFFF' : '#00000000')"/>
        <Table AlignmentToParent="left:0 top:0 right:0 bottom:0" CellPadding="5">
          <att.Rows>
            <CellOption>composeType:MinSize</CellOption>
          </att.Rows>
          <att.Columns>
            <CellOption>composeType:MinSize</CellOption>
            <CellOption>composeType:Percentage percentage:1.0</CellOption>
          </att.Columns>

          <Cell Site="row:0 column:0">
            <ImageFrame FrameIndex="0" Image-bind="self.ViewModel.Image ?? null"/>
          </Cell>
          <Cell Site="row:0 column:1">
            <SolidLabel Font-bind="self.Font" Text-bind="self.ViewModel.Name ?? ''" Color-bind="cast Color (self.Selected ? '#000000' : '#FFFFFF')"/>
          </Cell>
        </Table>
      </SelectableButtonTemplate>
    </Instance>
  </Instance>

  <Instance name="AccountItemTemplateResource">
    <Instance ref.CodeBehind="false" ref.Class="demo::AccountItemTemplate">
      <ref.Parameter Name="ViewModel" Class="demo::AccountButtonViewModel"/>
      <ControlTemplate MinSizeLimitation="LimitToElementAndChildren">
        <CheckBox ControlTemplate="demo::AccountButtonTemplate" Context-eval="ViewModel" GroupController-eval="ViewModel.Controller"/>
      </ControlTemplate>
    </Instance>
  </Instance>

  <Instance name="MainWindowResource">
    <Instance ref.CodeBehind="false" ref.Class="demo::MainWindow" xmlns:x="presentation::controls::GuiSelectableButton::*">
      <ref.Members>
        <![CDATA[
          var accounts: observe AccountButtonViewModel^[] = {};
        ]]>
      </ref.Members>
      <ref.Ctor>
        <![CDATA[
          for(i in range [1, 8])
          {
            var item = new AccountButtonViewModel^();
            item.Controller = self.accountController;
            item.Name = Sys::LoremIpsumTitle(20);
            item.Image = (cast (GuiImageData^) self.ResolveResource("res", $"Images/_$(i)", true)).Image;
            self.accounts.Add(item);
          }
        ]]>
      </ref.Ctor>
      <Window ref.Name="self" Text-eval="Sys::LoremIpsumTitle(20)" ClientSize="x:640 y:480">
        <x:MutexGroupController ref.Name="accountController"/>
        <Table AlignmentToParent="left:0 top:0 right:0 bottom:0" CellPadding="5" MinSizeLimitation="LimitToElementAndChildren">
          <att.Rows>
            <CellOption>composeType:Percentage percentage:1.0</CellOption>
          </att.Rows>
          <att.Columns>
            <CellOption>composeType:MinSize</CellOption>
            <CellOption>composeType:Percentage percentage:1.0</CellOption>
          </att.Columns>

          <Cell Site="row:0 column:0">
            <RepeatStack MinSizeLimitation="LimitToElementAndChildren" Direction="Vertical">
              <att.ItemSource-eval>self.accounts</att.ItemSource-eval>
              <att.ItemTemplate>demo::AccountItemTemplate</att.ItemTemplate>
            </RepeatStack>
          </Cell>
        </Table>
      </Window>
    </Instance>
  </Instance>
</Resource>