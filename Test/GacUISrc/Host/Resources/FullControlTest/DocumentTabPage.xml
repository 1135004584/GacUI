<Instance ref.CodeBehind="false" ref.Class="demo::DocumentTabPage" xmlns:demo="demo::*">
  <ref.Members>
    <![CDATA[
      event ClipboardUpdated();
      
      var ccSource : GuiWindow* = null;
      var ccHandler : system::reflection::EventHandler^ = null;

      func OnClipboardUpdated(sender : Graphics*, arguments: GuiEventArgs*) : void
      {
        ClipboardUpdated();
      }

      func OnRenderTargetChanged(sender : Graphics*, arguments: GuiEventArgs*) : void
      {
        if (ccSource is not null)
        {
          detach(ccSource.ClipboardUpdated, ccHandler);
          ccSource = null;
          ccHandler = null;
        }

        ccSource = RelatedControlHost as GuiWindow*;
        if (ccSource is not null)
        {
          ccHandler = attach(ccSource.ClipboardUpdated, OnClipboardUpdated);
        }
        ClipboardUpdated();
      }
    ]]>
  </ref.Members>
  <ref.Ctor>
    <![CDATA[
      attach(self.RenderTargetChanged, OnRenderTargetChanged);
    ]]>
  </ref.Ctor>
  <TabPage ref.Name="self" Text="Document Editor">
    <Table AlignmentToParent="left:0 top:0 right:0 bottom:0">
      <att.Rows>
        <_>composeType:MinSize</_>
        <_>composeType:MinSize</_>
        <_>composeType:Percentage percentage:1.0</_>
      </att.Rows>
      <att.Columns>
        <_>composeType:Percentage percentage:1.0</_>
      </att.Columns>

      <Cell Site="row:0 column:0">
        <ToolstripMenuBar>
          <att.BoundsComposition-set AlignmentToParent="left:0 top:0 right:0 bottom:0"/>
          <MenuBarButton Text="Edit" Alt="E">
            <att.SubMenu-set>
              <MenuItemButton Command-ref="commandUndo" Alt="U"/>
              <MenuItemButton Command-ref="commandRedo" Alt="R"/>
              <MenuSplitter/>
              <MenuItemButton Command-ref="commandCopy" Alt="C"/>
              <MenuItemButton Command-ref="commandCut" Alt="X"/>
              <MenuItemButton Command-ref="commandPaste" Alt="P"/>
              <MenuSplitter/>
              <MenuItemButton Command-ref="commandDelete" Alt="D"/>
              <MenuSplitter/>
              <MenuItemButton Command-ref="commandSelect" Alt="S"/>
            </att.SubMenu-set>
          </MenuBarButton>
          <MenuBarButton Text="Object" Alt="O">
            <att.SubMenu-set>
              <MenuItemButton Command-ref="commandInsertImage" Alt="I"/>
              <MenuItemButton Command-ref="commandEditHyperlink" Alt="L"/>
              <MenuItemButton Command-ref="commandRemoveHyperlink" Alt="R"/>
            </att.SubMenu-set>
          </MenuBarButton>
          <MenuBarButton Text="View" Alt="V">
            <att.SubMenu-set>
              <MenuItemButton Command-ref="commandViewOnly" Alt="V"/>
              <MenuItemButton Command-ref="commandSelectable" Alt="S"/>
              <MenuItemButton Command-ref="commandEditable" Alt="E"/>
            </att.SubMenu-set>
          </MenuBarButton>
        </ToolstripMenuBar>
      </Cell>

      <Cell Site="row:1 column:0">
        <ToolstripToolBar>
          <att.BoundsComposition-set AlignmentToParent="left:0 top:0 right:0 bottom:0"/>
          <ToolstripButton Command-ref="commandViewOnly" Alt="V"/>
          <ToolstripButton Command-ref="commandSelectable" Alt="S"/>
          <ToolstripButton Command-ref="commandEditable" Alt="E"/>
          <ToolstripSplitter/>
          <ToolstripButton Command-ref="commandUndo" Alt="U"/>
          <ToolstripButton Command-ref="commandRedo" Alt="R"/>
          <ToolstripSplitter/>
          <ToolstripButton Command-ref="commandCopy" Alt="C"/>
          <ToolstripButton Command-ref="commandCut" Alt="X"/>
          <ToolstripButton Command-ref="commandPaste" Alt="P"/>
          <ToolstripSplitter/>
          <ToolstripButton Command-ref="commandDelete" Alt="D"/>
          <ToolstripSplitter/>
          <ToolstripButton Command-ref="commandInsertImage" Alt="I"/>
          <ToolstripButton Command-ref="commandEditHyperlink" Alt="L"/>
          <ToolstripButton Command-ref="commandRemoveHyperlink" Alt="R"/>
          <ToolstripSplitter/>
          <ToolstripButton Command-ref="commandBold" Alt="B"/>
          <ToolstripButton Command-ref="commandItalic" Alt="I"/>
          <ToolstripButton Command-ref="commandUnderline" Alt="U"/>
          <ToolstripButton Command-ref="commandStrike" Alt="S"/>
          <ToolstripButton Command-ref="commandFont" Alt="F"/>
          <ToolstripButton Command-ref="commandColor" Alt="C"/>
          <ToolstripButton Command-ref="commandBackColor" Alt="K"/>
        </ToolstripToolBar>
      </Cell>

      <Cell Site="row:2 column:0">
        <DocumentViewer ref.Name="document" EditMode="Editable">
          <att.BoundsComposition-set AlignmentToParent="left:0 top:0 right:0 bottom:0"/>
        </DocumentViewer>
      </Cell>
    </Table>

    <ToolstripCommand ref.Name="commandUndo" Text="Undo" Image-uri="res://ToolbarImages/Undo" ShortcutBuilder="Ctrl+Z">
      <att.Enabled-bind>document.observe as _(_.CanUndo() on _.UndoRedoChanged)</att.Enabled-bind>
      <ev.Executed-eval>
        <![CDATA[document.Undo();]]>
      </ev.Executed-eval>
    </ToolstripCommand>

    <ToolstripCommand ref.Name="commandRedo" Text="Redo" Image-uri="res://ToolbarImages/Redo" ShortcutBuilder="Ctrl+Y">
      <att.Enabled-bind>document.observe as _(_.CanRedo() on _.UndoRedoChanged)</att.Enabled-bind>
      <ev.Executed-eval>
        <![CDATA[document.Redo();]]>
      </ev.Executed-eval>
    </ToolstripCommand>

    <ToolstripCommand ref.Name="commandCopy" Text="Copy" Image-uri="res://ToolbarImages/Copy" ShortcutBuilder="Ctrl+C">
      <att.Enabled-bind>document.observe as _(_.CanCopy() on _.SelectionChanged)</att.Enabled-bind>
      <ev.Executed-eval>
        <![CDATA[document.Copy();]]>
      </ev.Executed-eval>
    </ToolstripCommand>

    <ToolstripCommand ref.Name="commandCut" Text="Cut" Image-uri="res://ToolbarImages/Cut" ShortcutBuilder="Ctrl+Z">
      <att.Enabled-bind>document.observe as _(_.CanCut() on _.SelectionChanged)</att.Enabled-bind>
      <ev.Executed-eval>
        <![CDATA[document.Cut();]]>
      </ev.Executed-eval>
    </ToolstripCommand>

    <ToolstripCommand ref.Name="commandPaste" Text="Paste" Image-uri="res://ToolbarImages/Paste" ShortcutBuilder="Ctrl+V">
      <att.Enabled-bind>self.observe as _(document.CanPaste() on _.ClipboardUpdated)</att.Enabled-bind>
      <ev.Executed-eval>
        <![CDATA[document.Paste();]]>
      </ev.Executed-eval>
    </ToolstripCommand>

    <ToolstripCommand ref.Name="commandDelete" Text="Delete" Image-uri="res://ToolbarImages/Delete">
      <att.Enabled-bind>document.observe as _(_.CanCut() on _.SelectionChanged)</att.Enabled-bind>
      <ev.Executed-eval>
        <![CDATA[document.SetSelectionText("");]]>
      </ev.Executed-eval>
    </ToolstripCommand>

    <ToolstripCommand ref.Name="commandSelect" Text="Select All" ShortcutBuilder="Ctrl+A">
      <ev.Executed-eval>
        <![CDATA[document.SelectAll();]]>
      </ev.Executed-eval>
    </ToolstripCommand>

    <ToolstripCommand ref.Name="commandInsertImage" Text="Insert Image" Image-uri="res://ToolbarImages/Image">
      <ev.Executed-eval>
        <![CDATA[
          {
          }
        ]]>
      </ev.Executed-eval>
    </ToolstripCommand>

    <ToolstripCommand ref.Name="commandEditHyperlink" Text="Edit Hyperlink ..." Image-uri="res://ToolbarImages/Link">
      <ev.Executed-eval>
        <![CDATA[
          {
          }
        ]]>
      </ev.Executed-eval>
    </ToolstripCommand>

    <ToolstripCommand ref.Name="commandRemoveHyperlink" Text="Remove Hyperlink" Image-uri="res://ToolbarImages/RemoveLink">
      <ev.Executed-eval>
        <![CDATA[
          {
          }
        ]]>
      </ev.Executed-eval>
    </ToolstripCommand>

    <ToolstripCommand ref.Name="commandBold" Text="Bold" Image-uri="res://ToolbarImages/Bold">
      <ev.Executed-eval>
        <![CDATA[
          {
          }
        ]]>
      </ev.Executed-eval>
    </ToolstripCommand>

    <ToolstripCommand ref.Name="commandItalic" Text="Italic" Image-uri="res://ToolbarImages/Italic">
      <ev.Executed-eval>
        <![CDATA[
          {
          }
        ]]>
      </ev.Executed-eval>
    </ToolstripCommand>

    <ToolstripCommand ref.Name="commandUnderline" Text="Underline" Image-uri="res://ToolbarImages/Underline">
      <ev.Executed-eval>
        <![CDATA[
          {
          }
        ]]>
      </ev.Executed-eval>
    </ToolstripCommand>

    <ToolstripCommand ref.Name="commandStrike" Text="Strike" Image-uri="res://ToolbarImages/Strike">
      <ev.Executed-eval>
        <![CDATA[
          {
          }
        ]]>
      </ev.Executed-eval>
    </ToolstripCommand>

    <ToolstripCommand ref.Name="commandFont" Text="Set Font ..." Image-uri="res://ToolbarImages/Font">
      <ev.Executed-eval>
        <![CDATA[
          {
          }
        ]]>
      </ev.Executed-eval>
    </ToolstripCommand>

    <ToolstripCommand ref.Name="commandColor" Text="Text Color ..." Image-uri="res://ToolbarImages/Color">
      <ev.Executed-eval>
        <![CDATA[
          {
          }
        ]]>
      </ev.Executed-eval>
    </ToolstripCommand>

    <ToolstripCommand ref.Name="commandBackColor" Text="Background Color ..." Image-uri="res://ToolbarImages/BackColor">
      <ev.Executed-eval>
        <![CDATA[
          {
          }
        ]]>
      </ev.Executed-eval>
    </ToolstripCommand>

    <ToolstripCommand ref.Name="commandViewOnly" Text="Preview" Image-uri="res://ToolbarImages/ViewOnly">
      <ev.Executed-eval>
        <![CDATA[
          {
            document.EditMode = ViewOnly;
            commandViewOnly.Selected = true;
            commandSelectable.Selected = false;
            commandEditable.Selected = false;
            self.UpdateSubscriptions();
          }
        ]]>
      </ev.Executed-eval>
    </ToolstripCommand>

    <ToolstripCommand ref.Name="commandSelectable" Text="Selectable" Image-uri="res://ToolbarImages/Selectable">
      <ev.Executed-eval>
        <![CDATA[
          {
            document.EditMode = Selectable;
            commandViewOnly.Selected = false;
            commandSelectable.Selected = true;
            commandEditable.Selected = false;
            self.UpdateSubscriptions();
          }
        ]]>
      </ev.Executed-eval>
    </ToolstripCommand>

    <ToolstripCommand ref.Name="commandEditable" Text="Editable" Selected="true" Image-uri="res://ToolbarImages/Editable">
      <ev.Executed-eval>
        <![CDATA[
          {
            document.EditMode = Editable;
            commandViewOnly.Selected = false;
            commandSelectable.Selected = false;
            commandEditable.Selected = true;
            self.UpdateSubscriptions();
          }
        ]]>
      </ev.Executed-eval>
    </ToolstripCommand>
  </TabPage>
</Instance>